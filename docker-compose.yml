volumes:
  # elasticsearch:
  #   driver: local
  # kibana:
  #   driver: local
  # pgadmin:
  #   driver: local
  rabbitmq:
    driver: local
  redis:
    driver: local
  redisinsight:
    driver: local
  postgres:
    driver: local


services:
  pandatech_modular_monolith:
    build:
      context: .
      dockerfile: Dockerfile.Local
    container_name: pandatech_modular_monolith
    hostname: pandatech_modular_monolith
    restart: always
    
    depends_on:
      - postgres_db
      - rabbitmq
      - redis
    #      - elasticsearch
    ports:
      - "80:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Local
      ASPNETCORE_HTTP_PORTS: 80
      PANDAVAULT_URL: https://bevault.pandatech.it
      PANDAVAULT_SECRET: 0c579832-968e-463e-a69e-f9634332d29e
      ConnectionStrings__Postgres: Server=postgres_db;Port=5432;Database=pandatech_vertical_slices;User Id=test;Password=test;Pooling=true;
      ConnectionStrings__Redis: redis:6379
      RabbitMqSettings__RabbitMqHost: amqp://test:test@rabbitmq:5672
    volumes:
      - ~/.aspnet/https:/https:ro
  
  # ---------------------------------------------------------------------------------
  # Elastic search
  # ---------------------------------------------------------------------------------
  
  #  elasticsearch:
  #    container_name: elasticsearch
  #    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
  #    restart: always
  #    ports:
  #      - 9200:9200
  #    environment:
  #      - bootstrap.memory_lock=true
  #      - discovery.type=single-node
  #      - xpack.security.enabled=false
  #      - xpack.security.http.ssl.enabled=false
  #      - xpack.security.transport.ssl.enabled=false
  #    ulimits:
  #      memlock:
  #        soft: -1
  #        hard: -1
  #    volumes:
  #      - elasticsearch:/usr/share/elasticsearch/data
  #    healthcheck:
  #      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
  #      interval: 30s
  #      timeout: 10s
  #      retries: 5

  # ---------------------------------------------------------------------------------
  # Kibana
  # ---------------------------------------------------------------------------------
  
  #  kibana:
  #    depends_on:
  #      elasticsearch:
  #        condition: service_healthy
  #    container_name: kibana
  #    image: docker.elastic.co/kibana/kibana:8.16.1
  #    restart: always
  #    ports:
  #      - 5601:5601
  #    environment:
  #      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #    volumes:
  #      - kibana:/usr/share/kibana/data
  
  # ---------------------------------------------------------------------------------
  # PgAdmin
  # ---------------------------------------------------------------------------------

  # pg-admin:
  #   container_name: pg_admin
  #   image: dpage/pgadmin4:latest
  #   restart: always
  #   ports:
  #     - "5050:80"
  #   #in pgAdmin set Host name/address to host.docker.internal or postgres_db in linux
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=test@pandatech.it
  #     - PGADMIN_DEFAULT_PASSWORD=test
  #   volumes:
  #     - pgadmin:/var/lib/pgadmin

  # ---------------------------------------------------------------------------------
  # RabbitMQ
  # ---------------------------------------------------------------------------------

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4-management-alpine
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: test
      RABBITMQ_DEFAULT_PASS: test
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  # ---------------------------------------------------------------------------------
  # Redis
  # ---------------------------------------------------------------------------------

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  # ---------------------------------------------------------------------------------
  # Redis Insight
  # ---------------------------------------------------------------------------------

  # redisinsight:
  #   container_name: redisinsight
  #   image: redis/redisinsight:latest
  #   restart: always
  #   ports:
  #     - "5540:5540"
  #   volumes:
  #    - redisinsight:/db

  # ---------------------------------------------------------------------------------
  # Postgres
  # ---------------------------------------------------------------------------------

  postgres_db:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data